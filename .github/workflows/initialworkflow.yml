jobs:
  terragrunt-tests:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Azure login using the Service Principal
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Run Terragrunt formatting check
      - name: Check Terragrunt HCL formatting
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.tg_dir }}
          tg_command: 'hclfmt --terragrunt-check --terragrunt-diff'

      # Plan execution
      - name: Terragrunt Plan
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.tg_dir }}
          tg_command: 'plan'

      # Apply execution
      - name: Terragrunt Apply
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.tg_dir }}
          tg_command: 'apply'
          tg_add_approve: '1'

      # Verify Azure Resource Group Exists
      - name: Verify Azure Resource Group Exists
        run: |
          az group show --name resource-group-unit

      # Destroy resources after testing
      - name: Terragrunt Destroy
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.tg_dir }}
          tg_command: 'destroy'
          tg_add_approve: '1'
